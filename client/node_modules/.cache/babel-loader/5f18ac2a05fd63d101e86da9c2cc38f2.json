{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laith\\\\Desktop\\\\React\\\\eshop\\\\src\\\\Pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../Component/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../Component/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      console.log(snapshot);\n    });\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return (// Ref. To Shop collection\n      React.createElement(\"div\", {\n        className: \"shop-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n          isLoading: loading\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n          isLoading: loading\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage); //\n// import React from 'react';\n// import { Route } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n// import CollectionsOverviewContainer from '../../Component/collections-overview/collections-overview.component';\n// import CollectionPageContainer from '../shop/collection.container';\n// class ShopPage extends React.Component {\n//   componentDidMount() {\n//     const { fetchCollectionsStartAsync } = this.props;\n//     fetchCollectionsStartAsync();\n//   }\n//   render() {\n//     const { match } = this.props;\n//     return (\n//       <div className='shop-page'>\n//         <Route\n//           exact\n//           path={`${match.path}`}\n//           component={CollectionsOverviewContainer}\n//         />\n//         <Route\n//           path={`${match.path}/:collectionId`}\n//           component={CollectionPageContainer}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// // const mapDispatchToProps = dispatch => ({\n// //     fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n// // });\n// const mapDispatchToProps = dispatch => ({\n//     fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n//   });\n// export default connect(\n//   null,\n//   mapDispatchToProps\n// )(ShopPage);","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/src/Pages/shop/shop.component.jsx"],"names":["React","Route","connect","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverview","CollectionPage","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","console","log","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EACQC,+BADR,QAEe,+BAFf;AAIA,SAAQC,iBAAR,QAAgC,+BAAhC;AAEA,OAAOC,WAAP,MAAwB,qDAAxB;AAEA,OAAOC,mBAAP,MAAiC,qEAAjC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,6BAA6B,GAAGH,WAAW,CAACC,mBAAD,CAAjD;AACA,MAAMG,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMG,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAF2B;AAAA,SAMnCC,uBANmC,GAMT,IANS;AAAA;;AAQlCC,EAAAA,iBAAiB,GAAE;AAAA,UACTX,iBADS,GACY,KAAKY,KADjB,CACTZ,iBADS;AAGhB,UAAMa,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,KAFD;AAIA,SAAKN,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAA0B,MAAMC,QAAN,IAAkB;AACvE,YAAMG,aAAa,GAAGpB,+BAA+B,CAACiB,QAAD,CAArD;AACAhB,MAAAA,iBAAiB,CAACmB,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACX,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAJ8B,CAA/B;AAKF;;AAGFY,EAAAA,MAAM,GAAE;AAAA,UACGC,KADH,GACY,KAAKV,KADjB,CACGU,KADH;AAAA,UAEGb,OAFH,GAEc,KAAKD,KAFnB,CAEGC,OAFH;AAGJ,WAAS;AACL;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAKX,KAAD,IAAW,oBAAC,6BAAD;AAA+B,UAAA,SAAS,EAAEH;AAA1C,WAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEJ,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEU,KAAK,CAACC,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAKX,KAAD,IAAW,oBAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEH;AAAtC,WAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFI;AADJ;AAMH;;AAlCkC;;AAqCvC,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCzB,EAAAA,iBAAiB,EAAE0B,cAAc,IAAID,QAAQ,CAACzB,iBAAiB,CAAC0B,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAKA,eAAe7B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAmClB,QAAnC,CAAf,C,CAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom'; \r\nimport {connect} from 'react-redux';\r\nimport {firestore, \r\n        convertCollectionsSnapshotToMap\r\n        } from '../../firebase/firebase.utils'; \r\n\r\nimport {updateCollections} from '../../redux/shop/shop.actions';\r\n\r\nimport WithSpinner from '../../Component/with-spinner/with-spinner.component'; \r\n\r\nimport CollectionsOverview  from '../../Component/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component'; \r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview); \r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); \r\n\r\nclass ShopPage extends React.Component {\r\n    \r\n    state = {\r\n        loading: true\r\n    };\r\n\r\n    unsubscribeFromSnapshot = null; \r\n\r\n     componentDidMount(){\r\n        const {updateCollections} = this.props; \r\n\r\n        const collectionRef = firestore.collection('collections');\r\n        \r\n        collectionRef.onSnapshot(async snapshot => {\r\n            console.log(snapshot)\r\n        });\r\n\r\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot( async snapshot => {\r\n            const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n            updateCollections(collectionMap); \r\n            this.setState({loading: false});\r\n        });\r\n     };\r\n\r\n\r\n    render(){\r\n        const {match} = this.props;\r\n        const {loading} = this.state; \r\n        return(  // Ref. To Shop collection\r\n            <div className='shop-page'> \r\n            <Route exact path={`${match.path}`} render = {(props) => <CollectionOverviewWithSpinner isLoading={loading} {...props}/>} /> \r\n        <Route path={`${match.path}/:collectionId`} render = {(props) => <CollectionPageWithSpinner isLoading={loading} {...props}/>} /> \r\n            </div>\r\n        );\r\n    }\r\n}  \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n});\r\n    \r\n\r\nexport default connect(null, mapDispatchToProps) (ShopPage);\r\n\r\n//\r\n\r\n// import React from 'react';\r\n// import { Route } from 'react-router-dom';\r\n// import { connect } from 'react-redux';\r\n\r\n// import { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\r\n\r\n// import CollectionsOverviewContainer from '../../Component/collections-overview/collections-overview.component';\r\n// import CollectionPageContainer from '../shop/collection.container';\r\n\r\n// class ShopPage extends React.Component {\r\n//   componentDidMount() {\r\n//     const { fetchCollectionsStartAsync } = this.props;\r\n\r\n//     fetchCollectionsStartAsync();\r\n//   }\r\n\r\n//   render() {\r\n//     const { match } = this.props;\r\n\r\n//     return (\r\n//       <div className='shop-page'>\r\n//         <Route\r\n//           exact\r\n//           path={`${match.path}`}\r\n//           component={CollectionsOverviewContainer}\r\n//         />\r\n//         <Route\r\n//           path={`${match.path}/:collectionId`}\r\n//           component={CollectionPageContainer}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// // const mapDispatchToProps = dispatch => ({\r\n// //     fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n// // });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n//   });\r\n\r\n\r\n// export default connect(\r\n//   null,\r\n//   mapDispatchToProps\r\n// )(ShopPage);"]},"metadata":{},"sourceType":"module"}