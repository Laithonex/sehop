{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laith\\\\Desktop\\\\React\\\\eshop\\\\client\\\\src\\\\Component\\\\header\\\\header.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // to get the current user from the reducer, not from the app.js\n\nimport { createStructuredSelector } from 'reselect'; // import {auth} from '../../firebase/firebase.utils';\n\nimport './header.styles.scss';\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\nimport { selectCartHidden } from '../../redux/cart/cart.selectors';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { HeaderContainer, LogoContainer, OptionsContainer, OptionLink } from './header.styles';\nimport { signOutStart } from '../../redux/user/user.actions';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/crown.svg\";\n\nconst Header = ({\n  currentUser,\n  hidden,\n  signOutStart\n}) => React.createElement(HeaderContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(LogoContainer, {\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(Logo, {\n  className: \"logo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n})), React.createElement(OptionsContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(OptionLink, {\n  to: \"/shop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"SHOP\"), React.createElement(OptionLink, {\n  to: \"/shop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"CONTACT\"), currentUser ? React.createElement(OptionLink, {\n  as: \"div\",\n  onClick: signOutStart,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"SIGN OUT\") : React.createElement(OptionLink, {\n  to: \"/signin\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, \"SIGN IN\"), React.createElement(CartIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n})), hidden ? null : React.createElement(CartDropdown, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}));\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  hidden: selectCartHidden //we want to user value from the rootreducer, and then we want the current user value\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOutStart: () => dispatch(signOutStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header); //mapStateToProps[this is stander with redux code base] it allaes us to get the state","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/client/src/Component/header/header.component.jsx"],"names":["React","connect","createStructuredSelector","CartIcon","CartDropdown","selectCartHidden","selectCurrentUser","HeaderContainer","LogoContainer","OptionsContainer","OptionLink","signOutStart","Header","currentUser","hidden","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAAqC;;AACrC,SAAQC,wBAAR,QAAuC,UAAvC,C,CAEA;;AACA,OAAO,sBAAP;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,gBAAR,QAA+B,iCAA/B;AACA,SAAQC,iBAAR,QAAgC,iCAAhC;AACA,SAAQC,eAAR,EAAyBC,aAAzB,EAAwCC,gBAAxC,EAA0DC,UAA1D,QAA2E,iBAA3E;AACA,SAAQC,YAAR,QAA2B,+BAA3B;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,MAAd;AAAsBH,EAAAA;AAAtB,CAAD,KACX,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAe,EAAA,EAAE,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,EAII,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAKI,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,EASKE,WAAW,GACR,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,KAAf;AAAqB,EAAA,OAAO,EAAEF,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,GAGR,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZR,EAgBQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAhBR,CAJJ,EAuBQG,MAAM,GAAG,IAAH,GACN,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAxBR,CADJ;;AA+BA,MAAMC,eAAe,GAAGb,wBAAwB,CAAC;AAC7CW,EAAAA,WAAW,EAAEP,iBADgC;AAE7CQ,EAAAA,MAAM,EAAET,gBAFqC,CAEpB;;AAFoB,CAAD,CAAhD;;AAKA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCN,EAAAA,YAAY,EAAE,MAAMM,QAAQ,CAACN,YAAY,EAAb;AADQ,CAAL,CAAnC;;AAIA,eAAeV,OAAO,CAClBc,eADkB,EAElBC,kBAFkB,CAAP,CAGTJ,MAHS,CAAf,C,CAGe","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux'; // to get the current user from the reducer, not from the app.js\r\nimport {createStructuredSelector} from 'reselect'; \r\n\r\n// import {auth} from '../../firebase/firebase.utils';\r\nimport './header.styles.scss';\r\nimport CartIcon from '../cart-icon/cart-icon.component';\r\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\r\nimport {selectCartHidden} from '../../redux/cart/cart.selectors';\r\nimport {selectCurrentUser} from '../../redux/user/user.selectors';\r\nimport {HeaderContainer, LogoContainer, OptionsContainer, OptionLink} from './header.styles';\r\nimport {signOutStart} from '../../redux/user/user.actions'; \r\nimport {ReactComponent as Logo} from '../../assets/crown.svg';\r\n\r\nconst Header = ({currentUser, hidden, signOutStart}) => (\r\n    <HeaderContainer>\r\n        <LogoContainer to=\"/\">\r\n            <Logo className='logo'/>\r\n        </LogoContainer>\r\n        <OptionsContainer>\r\n\r\n            <OptionLink to='/shop'>\r\n             SHOP\r\n            </OptionLink >\r\n            <OptionLink to='/shop'>\r\n            CONTACT\r\n            </OptionLink>\r\n                      \r\n            {currentUser ? (\r\n                <OptionLink as='div' onClick={signOutStart} >SIGN OUT</OptionLink>\r\n                ):(\r\n                <OptionLink to=\"/signin\">\r\n                  SIGN IN \r\n                </OptionLink>\r\n                )}  \r\n                <CartIcon/>                 \r\n        </OptionsContainer>\r\n        {\r\n            hidden ? null :\r\n            <CartDropdown/>\r\n        }\r\n            \r\n    </HeaderContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: selectCurrentUser, \r\n    hidden: selectCartHidden //we want to user value from the rootreducer, and then we want the current user value\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signOutStart: () => dispatch(signOutStart())\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    mapDispatchToProps\r\n    )(Header); //mapStateToProps[this is stander with redux code base] it allaes us to get the state"]},"metadata":{},"sourceType":"module"}