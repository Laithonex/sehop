{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laith\\\\Desktop\\\\React\\\\eshop\\\\src\\\\Pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nimport WithSpinner from '../../Component/with-spinner/with-spinner.component';\nimport CollectionsOverviewContainer from '../../Component/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    // this the the promise style\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionLoaded = _this$props.isCollectionLoaded;\n    return (// Ref. To Shop collection\n      React.createElement(\"div\", {\n        className: \"shop-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverviewContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionsOverviewContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), \"} />\")\n    );\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/src/Pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","WithSpinner","CollectionsOverviewContainer","CollectionPage","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAGA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,SAAQC,0BAAR,EAAoCC,yBAApC,QAAoE,gCAApE;AAEA,OAAOC,WAAP,MAAwB,qDAAxB;AAEA,OAAOC,4BAAP,MAA0C,qEAA1C;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,yBAAyB,GAAGH,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAME,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAGnCC,EAAAA,iBAAiB,GAAE;AAAE;AAAF,UACRT,0BADQ,GACsB,KAAKU,KAD3B,CACRV,0BADQ;AAEfA,IAAAA,0BAA0B;AAC5B;;AAEFW,EAAAA,MAAM,GAAE;AAAA,wBACgC,KAAKD,KADrC;AAAA,UACGE,KADH,eACGA,KADH;AAAA,UACUC,kBADV,eACUA,kBADV;AAEJ,WAAS;AACL;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAEV,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEJ,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACE,IAAK,gBAA3B;AAA4C,QAAA,SAAS,EAAEV,4BAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFI;AADJ;AAMH;;AAhBkC;;AAmBvC,MAAMW,eAAe,GAAGjB,wBAAwB,CAAC;AAC7Ce,EAAAA,kBAAkB,EAAEX;AADyB,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAKA,eAAeD,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA8CT,QAA9C,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom'; \r\nimport { createStructuredSelector } from 'reselect'; \r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\r\nimport {selectIsCollectionFetching, selectIsCollectionsLoaded} from '../../redux/shop/shop.selector'; \r\n\r\nimport WithSpinner from '../../Component/with-spinner/with-spinner.component'; \r\n\r\nimport CollectionsOverviewContainer  from '../../Component/collections-overview/collections-overview.container';\r\nimport CollectionPage from '../collection/collection.component'; \r\n\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); \r\n\r\nclass ShopPage extends React.Component {\r\n\r\n\r\n    componentDidMount(){ // this the the promise style\r\n        const {fetchCollectionsStartAsync} = this.props; \r\n        fetchCollectionsStartAsync();\r\n     }\r\n\r\n    render(){\r\n        const {match, isCollectionLoaded} = this.props;\r\n        return(  // Ref. To Shop collection\r\n            <div className='shop-page'> \r\n            <Route exact path={`${match.path}`} component={CollectionsOverviewContainer}/> \r\n        <Route path={`${match.path}/:collectionId`} component={CollectionsOverviewContainer}/>} /> \r\n            </div>\r\n        );\r\n    }\r\n}  \r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionLoaded: selectIsCollectionsLoaded\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n    \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (ShopPage);"]},"metadata":{},"sourceType":"module"}