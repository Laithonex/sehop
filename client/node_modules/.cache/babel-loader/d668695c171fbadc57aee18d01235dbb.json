{"ast":null,"code":"// import {takeEvery, call, put } from 'redux-saga/effects';\n// import {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'; \n// import {\n//     fetchCollectionsSuccess, \n//     fetchCollectionsFailure\n// } from './shop.actions';\n// import shopActionTypes from './shop.types'; \n// export function* fetchCollectionsAsync(){\n//     // yield console.log('I am fired'); \n//     try{\n//         const collectionRef = firestore.collection('collections');\n//         const snapshot = yield collectionRef.get();\n//         const collectionsMap =  yield call(convertCollectionsSnapshotToMap, snapshot);\n//         yield put(fetchCollectionsSuccess(collectionsMap)) \n//     } catch (error) {\n//         yield put(fetchCollectionsFailure(error.message))\n//     }\n//     // collectionRef\n//     // .get()\n//     // .then(snapshot => {\n//     //     const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n//     //     dispatch(fetchCollectionsSuccess(collectionMap)); \n//     // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n// }\n// export function* onFetchCollectionStart(){\n//     yield takeEvery(shopActionTypes.FETCH_COLLECTION_START, \n//         fetchCollectionsAsync\n//     ); \n// }","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/src/redux/shop/shop.sagas.js"],"names":[],"mappings":"AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import {takeEvery, call, put } from 'redux-saga/effects';\r\n\r\n// import {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'; \r\n\r\n// import {\r\n//     fetchCollectionsSuccess, \r\n//     fetchCollectionsFailure\r\n// } from './shop.actions';\r\n\r\n// import shopActionTypes from './shop.types'; \r\n\r\n// export function* fetchCollectionsAsync(){\r\n//     // yield console.log('I am fired'); \r\n\r\n//     try{\r\n//         const collectionRef = firestore.collection('collections');\r\n//         const snapshot = yield collectionRef.get();\r\n//         const collectionsMap =  yield call(convertCollectionsSnapshotToMap, snapshot);\r\n//         yield put(fetchCollectionsSuccess(collectionsMap)) \r\n//     } catch (error) {\r\n//         yield put(fetchCollectionsFailure(error.message))\r\n//     }\r\n\r\n//     // collectionRef\r\n//     // .get()\r\n//     // .then(snapshot => {\r\n//     //     const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n//     //     dispatch(fetchCollectionsSuccess(collectionMap)); \r\n//     // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n\r\n// }\r\n\r\n// export function* onFetchCollectionStart(){\r\n//     yield takeEvery(shopActionTypes.FETCH_COLLECTION_START, \r\n//         fetchCollectionsAsync\r\n//     ); \r\n// }"]},"metadata":{},"sourceType":"module"}