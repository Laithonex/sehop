{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Laith\\\\Desktop\\\\React\\\\eshop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Laith\\\\Desktop\\\\React\\\\eshop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Laith\\\\Desktop\\\\React\\\\eshop\\\\src\\\\Component\\\\Sign-up\\\\Sign-up.compnent.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FromInput from '../from-input/from-input.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './Sign-up.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password Do not match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \" I do not have an account \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(FromInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"DisplayName\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(FromInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(FromInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(FromInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Sing UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/src/Component/Sign-up/Sign-up.compnent.jsx"],"names":["React","useState","connect","FromInput","signUpStart","CustomButton","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport FromInput from '../from-input/from-input.component';\r\n\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\n\r\nimport'./Sign-up.styles.scss';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n\r\nconst SignUp =({signUpStart,}) => {\r\n\r\n    const [userCredentials, setUserCredentials] = useState({\r\n        displayName: '',\r\n        email: '', \r\n        password: '',\r\n        confirmPassword:''\r\n    });\r\n    const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            alert(\"Password Do not match\")\r\n            return;\r\n        }\r\n\r\n        signUpStart({displayName, email, password})\r\n        \r\n    };\r\n\r\n    const handleChange = event =>{\r\n        const{name, value} = event.target;\r\n        setUserCredentials({...userCredentials, [name]: value});\r\n    }\r\n\r\n        return(\r\n            <div className='sign-up'>\r\n                <h2 className='title'> I do not have an account </h2>\r\n                <span> Sign up with your email and password</span>\r\n                <form className='sign-up-form' onSubmit= {handleSubmit} >\r\n                   <FromInput  \r\n                        type='text'\r\n                        name='displayName'\r\n                        value={displayName}\r\n                        onChange={handleChange}\r\n                        label = 'DisplayName'\r\n                        required\r\n                    />\r\n\r\n                    <FromInput  \r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        label = 'email'\r\n                        required\r\n                    />\r\n\r\n                    <FromInput  \r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                        label = 'password'\r\n                        required\r\n                    />\r\n\r\n                    <FromInput  \r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        onChange={handleChange}\r\n                        label = 'Confirm Password'\r\n                        required\r\n                    />\r\n                   <CustomButton type= 'submit'>Sing UP</CustomButton>     \r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps) (SignUp)"]},"metadata":{},"sourceType":"module"}