{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laith\\\\Desktop\\\\React\\\\eshop\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport HomePage from './Pages/homepage/homepage.component';\nimport ShopPage from './Pages/shop/shop.component';\nimport Header from './Component/header/header.component';\nimport SignInAndSignUpPage from './Pages/sign-in-and-sign-out/sign-in-and-sign-up.component';\nimport CheckoutPage from './Pages/checkout/checkout.component'; // import {auth, createUserProfileDocument } from './firebase/firebase.utils'; //,addCollectionAndDocuments\n// import {setCurrentUser} from './redux/user/user.actions';\n\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { createStructuredSelector } from 'reselect'; // import { selectionCollectionsForPreview } from './redux/shop/shop.selector';\n// import SignIn from './Component/sign-in.compoent/sign-in.compoent';\n// const HatsPage = () => (\n//   <div>\n//     <h1>HATS PAGE</h1>\n//   </div>\n// );\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {// const {setCurrentUser } = this.props;\n    //  this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    //    if (userAuth){ //if user exist\n    //      const userRef = await createUserProfileDocument(userAuth); //we get this \n    //        userRef.onSnapshot(snapShot => { //gets whetever on the snapshot/ we get that from the .get method \n    //           setCurrentUser({\n    //               id: snapShot.id, \n    //               ...snapShot.data()\n    //           });\n    //        });\n    //      }\n    //     setCurrentUser(userAuth);\n    // createUserProfileDocument(userAuth)\n    // });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkoutPage\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }) : React.createElement(SignInAndSignUpPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser // ,collectionsArry: selectionCollectionsForPreview\n\n}); // const mapDispatchToProps = dispatch => ({ \n//   setCurrentUser: user => dispatch(setCurrentUser(user))\n// });\n\nexport default connect(mapStateToProps)(App); //makesure that hte values are in sequnce repectivly with const values","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/src/App.js"],"names":["React","Switch","Route","Redirect","connect","HomePage","ShopPage","Header","SignInAndSignUpPage","CheckoutPage","selectCurrentUser","createStructuredSelector","App","Component","unsubscribeFromAuth","componentDidMount","componentWillUnmount","render","props","currentUser","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAuC,kBAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,mBAAP,MAAgC,4DAAhC;AACA,OAAOC,YAAP,MAAyB,qCAAzB,C,CAEA;AACA;;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,wBAAT,QAAyC,UAAzC,C,CACA;AAEA;AAIA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAGhCC,EAAAA,iBAAiB,GAAE,CACjB;AAEF;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEE;AAEA;AACD;;AAEDC,EAAAA,oBAAoB,GAAE;AACpB,SAAKF,mBAAL;AAED;;AAEDG,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEZ,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,eAAlB;AAAkC,MAAA,SAAS,EAAEG,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAII,oBAAC,KAAD;AACA,MAAA,KAAK,MADL;AAEA,MAAA,IAAI,EAAC,SAFL;AAGA,MAAA,MAAM,EAAE,MACN,KAAKS,KAAL,CAAWC,WAAX,GACE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAGE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFA,CADF;AAqBD;;AApD+B;;AAuDlC,MAAMC,eAAe,GAAGT,wBAAwB,CAAE;AAChDQ,EAAAA,WAAW,EAAET,iBADmC,CAEhD;;AAFgD,CAAF,CAAhD,C,CAKA;AACA;AACA;;AAEA,eAAeN,OAAO,CAAGgB,eAAH,CAAP,CAA4BR,GAA5B,CAAf,C,CAAiD","sourcesContent":["import React from 'react';\nimport {Switch , Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport './App.css';\nimport HomePage from './Pages/homepage/homepage.component';\nimport ShopPage from './Pages/shop/shop.component';\nimport Header from './Component/header/header.component';\nimport SignInAndSignUpPage from './Pages/sign-in-and-sign-out/sign-in-and-sign-up.component';\nimport CheckoutPage from './Pages/checkout/checkout.component';\n\n// import {auth, createUserProfileDocument } from './firebase/firebase.utils'; //,addCollectionAndDocuments\n// import {setCurrentUser} from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { createStructuredSelector } from 'reselect'; \n// import { selectionCollectionsForPreview } from './redux/shop/shop.selector';\n\n// import SignIn from './Component/sign-in.compoent/sign-in.compoent';\n\n\n\n// const HatsPage = () => (\n//   <div>\n//     <h1>HATS PAGE</h1>\n//   </div>\n// );\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null; \n\n  componentDidMount(){\n    // const {setCurrentUser } = this.props;\n    \n  //  this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //    if (userAuth){ //if user exist\n  //      const userRef = await createUserProfileDocument(userAuth); //we get this \n       \n  //        userRef.onSnapshot(snapShot => { //gets whetever on the snapshot/ we get that from the .get method \n  //           setCurrentUser({\n  //               id: snapShot.id, \n  //               ...snapShot.data()\n  //           });\n  //        });\n  //      }\n\n  //     setCurrentUser(userAuth);\n\n    // createUserProfileDocument(userAuth)\n\n    // });\n  }\n\n  componentWillUnmount(){\n    this.unsubscribeFromAuth();\n\n  }\n\n  render(){\n    return (  \n      <div>\n      <Header/>\n      <Switch>\n        <Route exact path='/' component={HomePage}/>\n        <Route path='/shop' component={ShopPage}/>\n        <Route exact path='/checkoutPage' component={CheckoutPage}/>\n          <Route \n          exact \n          path='/signin' \n          render={() =>\n            this.props.currentUser ? (\n              <Redirect to='/' />\n            ) : (\n              <SignInAndSignUpPage />\n            )\n          }\n        />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector ({\n  currentUser: selectCurrentUser\n  // ,collectionsArry: selectionCollectionsForPreview\n});\n\n// const mapDispatchToProps = dispatch => ({ \n//   setCurrentUser: user => dispatch(setCurrentUser(user))\n// });\n\nexport default connect ( mapStateToProps )(App); //makesure that hte values are in sequnce repectivly with const values\n"]},"metadata":{},"sourceType":"module"}