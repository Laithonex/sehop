{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    });\n  };\n};\nexport const fetchCollectionsFailure = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FALIURE\n}); // export const updateCollections = (collectionsMap) => ({\n//     type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n//     payload: collectionsMap\n// })\n/////////////////////////////////////////////////////////////////////////////////\n//////////////////////////// PREVESOUSE CODE ///////////////////////////////////    \n///////////////////////////////////////////////////////////////////////////////\n// export const fetchCollectionsStartAsync = () => {\n//     return dispatch => {\n//       const collectionRef = firestore.collection('collections');\n//       dispatch();\n//       collectionRef\n//         .get()\n//         .then(snapshot => {\n//           const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//           dispatch(collectionsMap);\n//         })\n//         .catch(error => dispatch(error.message));\n//     };\n//   };\n// export const fetchCollectionsStart = () => ({\n//     type: ShopActionTypes.FETCH_COLLECTIONS_START\n//   });\n//   export const fetchCollectionsSuccess = collectionsMap => ({\n//     type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n//     payload: collectionsMap\n//   });\n//   export const fetchCollectionsFailure = errorMessage => ({\n//     type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n//     payload: errorMessage\n//   });\n//   export const fetchCollectionsStartAsync = () => {\n//     return dispatch => {\n//       const collectionRef = firestore.collection('collections');\n//       dispatch(fetchCollectionsStart());\n//       collectionRef\n//         .get()\n//         .then(snapshot => {\n//           const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//           dispatch(fetchCollectionsSuccess(collectionsMap));\n//         })\n//         .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n//     }};","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","payload","collectionMap","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","fetchCollectionsFailure","FETCH_COLLECTIONS_FALIURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAG,OAAO;AAC5CF,EAAAA,IAAI,EAAEJ,eAAe,CAACO,yBADsB;AAE5CC,EAAAA,OAAO,EAAEC;AAFmC,CAAP,CAAhC;AAMP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AAGIS,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMP,aAAa,GAAGP,+BAA+B,CAACc,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACL,uBAAuB,CAACG,aAAD,CAAxB,CAAR;AACH,KAHD;AAIL,GATD;AAUD,CAXM;AAaP,OAAO,MAAMQ,uBAAuB,GAAG,OAAO;AAC5Cb,EAAAA,IAAI,EAAEJ,eAAe,CAACkB;AADsB,CAAP,CAAhC,C,CAMP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ShopActionTypes from './shop.types'; \r\n\r\nimport { firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n}); \r\n\r\nexport const fetchCollectionsSuccess = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionMap\r\n}); \r\n \r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return dispatch => {\r\n    const collectionRef = firestore.collection('collections');\r\n    dispatch(fetchCollectionsStart()); \r\n        \r\n\r\n        collectionRef.get().then(snapshot => {\r\n            const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(fetchCollectionsSuccess(collectionMap)); \r\n        }); \r\n  }\r\n}\r\n\r\nexport const fetchCollectionsFailure = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_FALIURE\r\n})\r\n\r\n\r\n\r\n// export const updateCollections = (collectionsMap) => ({\r\n//     type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n//     payload: collectionsMap\r\n// })\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////// PREVESOUSE CODE ///////////////////////////////////    \r\n///////////////////////////////////////////////////////////////////////////////\r\n// export const fetchCollectionsStartAsync = () => {\r\n//     return dispatch => {\r\n//       const collectionRef = firestore.collection('collections');\r\n//       dispatch();\r\n  \r\n//       collectionRef\r\n//         .get()\r\n//         .then(snapshot => {\r\n//           const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n//           dispatch(collectionsMap);\r\n//         })\r\n//         .catch(error => dispatch(error.message));\r\n//     };\r\n//   };\r\n\r\n\r\n// export const fetchCollectionsStart = () => ({\r\n//     type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n//   });\r\n\r\n//   export const fetchCollectionsSuccess = collectionsMap => ({\r\n//     type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n//     payload: collectionsMap\r\n//   });\r\n  \r\n//   export const fetchCollectionsFailure = errorMessage => ({\r\n//     type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n//     payload: errorMessage\r\n//   });\r\n  \r\n//   export const fetchCollectionsStartAsync = () => {\r\n//     return dispatch => {\r\n//       const collectionRef = firestore.collection('collections');\r\n//       dispatch(fetchCollectionsStart());\r\n  \r\n//       collectionRef\r\n//         .get()\r\n//         .then(snapshot => {\r\n//           const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n//           dispatch(fetchCollectionsSuccess(collectionsMap));\r\n//         })\r\n//         .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n//     }};"]},"metadata":{},"sourceType":"module"}