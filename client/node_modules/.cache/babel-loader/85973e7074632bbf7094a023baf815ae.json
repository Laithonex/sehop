{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectionCollectionsForPreview = createSelector([selectCollections], collections => Object.keys(collections).map(key => collections[key]) // Object.keys is medthod which get us the keys of an object, and give it to an aray format \n);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections[collectionUrlParam] //find collection.id matching the Url parameter of our collection id map\n);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/src/redux/shop/shop.selector.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectionCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionsLoaded"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAGA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC;AAKP,OAAO,MAAMC,8BAA8B,GAAGN,cAAc,CACxD,CAACI,iBAAD,CADwD,EAExDC,WAAW,IAAIE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAFyC,CAEa;AAFb,CAArD;AAKP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAClDZ,cAAc,CACV,CAACI,iBAAD,CADU,EAEVC,WAAW,IAAIA,WAAW,CAACO,kBAAD,CAFhB,CAGV;AAHU,CADP;AAOP,OAAO,MAAMC,yBAAyB,GAAGb,cAAc,CACnD,CAACC,UAAD,CADmD,EAEnDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFoC,CAAhD","sourcesContent":["import {createSelector} from 'reselect'; \r\n\r\n\r\nconst selectShop = state => state.shop; \r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections     \r\n); \r\n\r\nexport const selectionCollectionsForPreview = createSelector(\r\n    [selectCollections],\r\n    collections => Object.keys(collections).map(key => collections[key]) // Object.keys is medthod which get us the keys of an object, and give it to an aray format \r\n)\r\n\r\nexport const selectCollection = collectionUrlParam =>\r\ncreateSelector(\r\n    [selectCollections],\r\n    collections => collections[collectionUrlParam]\r\n    //find collection.id matching the Url parameter of our collection id map\r\n)\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n  );"]},"metadata":{},"sourceType":"module"}