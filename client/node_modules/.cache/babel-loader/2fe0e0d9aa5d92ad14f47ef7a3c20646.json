{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // collectionRef.get().then(snapshot => {\n  //         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //         dispatch(fetchCollectionsSuccess(collectionsMap)); \n  //     }).catch(error => dispatch(fetchCollectionsFailure(error.message))); \n\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/src/redux/shop/shop.sagas.js"],"names":["call","put","takeLatest","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,UAAnB,QAAoC,oBAApC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;AAEA,SACAC,uBADA,EAEAC,uBAFA,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAGA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAG;AACC,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACI,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMZ,GAAG,CAACI,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAMC,KAAN,EAAa;AACX,UAAMf,GAAG,CAACK,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH,GAVmC,CAapC;AACA;AACA;AACA;;AACH;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMhB,UAAU,CAACK,eAAe,CAACY,uBAAjB,EAA0CX,qBAA1C,CAAhB;AACH","sourcesContent":["import {call, put, takeLatest} from 'redux-saga/effects';\r\nimport { firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\n\r\nimport {\r\nfetchCollectionsSuccess,\r\nfetchCollectionsFailure\r\n} from './shop.actions'; \r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\n\r\nexport function* fetchCollectionsAsync(){\r\n    yield console.log('I am fired')\r\n    \r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n        yield put(fetchCollectionsSuccess(collectionsMap))\r\n    } catch(error) {\r\n        yield put(fetchCollectionsFailure(error.message))\r\n    }\r\n\r\n\r\n    // collectionRef.get().then(snapshot => {\r\n    //         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //         dispatch(fetchCollectionsSuccess(collectionsMap)); \r\n    //     }).catch(error => dispatch(fetchCollectionsFailure(error.message))); \r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync  )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}