{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const updateCollections = collectionsMap => ({\n  type: ShopActionTypes.UPDATE_COLLECTIONS,\n  payload: collectionsMap\n}); // export const fetchCollectionsStartAsync = () => {\n//     return dispatch => {\n//       const collectionRef = firestore.collection('collections');\n//       dispatch(fetchCollectionsStart());\n//       collectionRef\n//         .get()\n//         .then(snapshot => {\n//           const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//           dispatch(fetchCollectionsSuccess(collectionsMap));\n//         })\n//         .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n//     };\n//   };\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","updateCollections","collectionsMap","type","UPDATE_COLLECTIONS","payload","fetchCollectionsStart","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SACIC,SADJ,EAEIC,+BAFJ,QAGS,+BAHT;AAKA,OAAO,MAAMC,iBAAiB,GAAIC,cAAD,KAAqB;AAClDC,EAAAA,IAAI,EAAEL,eAAe,CAACM,kBAD4B;AAElDC,EAAAA,OAAO,EAAEH;AAFyC,CAArB,CAA1B,C,CAKP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMI,qBAAqB,GAAG,OAAO;AACxCH,EAAAA,IAAI,EAAEL,eAAe,CAACS;AADkB,CAAP,CAA9B;AAIL,OAAO,MAAMC,uBAAuB,GAAGN,cAAc,KAAK;AACxDC,EAAAA,IAAI,EAAEL,eAAe,CAACW,yBADkC;AAExDJ,EAAAA,OAAO,EAAEH;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAMQ,uBAAuB,GAAGC,YAAY,KAAK;AACtDR,EAAAA,IAAI,EAAEL,eAAe,CAACc,yBADgC;AAEtDP,EAAAA,OAAO,EAAEM;AAF6C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGhB,SAAS,CAACiB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AAEAS,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMjB,cAAc,GAAGF,+BAA+B,CAACmB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACN,uBAAuB,CAACN,cAAD,CAAxB,CAAR;AACD,KALH,EAMGkB,KANH,CAMSC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAN1B;AAOD,GAXD;AAWE,CAZG","sourcesContent":["import ShopActionTypes from './shop.types'; \r\n\r\nimport {\r\n    firestore,\r\n    convertCollectionsSnapshotToMap\r\n  } from '../../firebase/firebase.utils';\r\n\r\nexport const updateCollections = (collectionsMap) => ({\r\n    type: ShopActionTypes.UPDATE_COLLECTIONS,\r\n    payload: collectionsMap\r\n})\r\n\r\n// export const fetchCollectionsStartAsync = () => {\r\n//     return dispatch => {\r\n//       const collectionRef = firestore.collection('collections');\r\n//       dispatch(fetchCollectionsStart());\r\n  \r\n//       collectionRef\r\n//         .get()\r\n//         .then(snapshot => {\r\n//           const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n//           dispatch(fetchCollectionsSuccess(collectionsMap));\r\n//         })\r\n//         .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n//     };\r\n//   };\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n  });\r\n\r\n  export const fetchCollectionsSuccess = collectionsMap => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n  });\r\n  \r\n  export const fetchCollectionsFailure = errorMessage => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n  });\r\n  \r\n  export const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n      const collectionRef = firestore.collection('collections');\r\n      dispatch(fetchCollectionsStart());\r\n  \r\n      collectionRef\r\n        .get()\r\n        .then(snapshot => {\r\n          const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n          dispatch(fetchCollectionsSuccess(collectionsMap));\r\n        })\r\n        .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    }};"]},"metadata":{},"sourceType":"module"}