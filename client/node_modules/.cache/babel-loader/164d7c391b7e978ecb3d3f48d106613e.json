{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laith\\\\Desktop\\\\React\\\\eshop\\\\src\\\\Component\\\\Sign-up\\\\Sign-up.compnent.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FromInput from '../from-input/from-input.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './Sign-up.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const signUpStart = this.props.signUpStart;\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert(\"Password Do not match\");\n        return;\n      }\n\n      signUpStart({\n        displayName,\n        email,\n        password\n      });\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \" I do not have an account \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(FromInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"DisplayName\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(FromInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(FromInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(FromInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Sing UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/src/Component/Sign-up/Sign-up.compnent.jsx"],"names":["React","connect","FromInput","signUpStart","CustomButton","SignUp","Component","constructor","handleSubmit","event","preventDefault","props","state","displayName","email","password","confirmPassword","alert","handleChange","target","name","value","setState","render","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport FromInput from '../from-input/from-input.component';\r\n\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\n\r\nimport'./Sign-up.styles.scss';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n\r\nclass SignUp extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state ={\r\n            displayName: '',\r\n            email: '', \r\n            password: '',\r\n            confirmPassword:''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const { signUpStart } = this.props\r\n        const { displayName, email, password, confirmPassword } = this.state;\r\n        if (password !== confirmPassword) {\r\n            alert(\"Password Do not match\")\r\n            return;\r\n        }\r\n\r\n        signUpStart({displayName, email, password})\r\n        \r\n    };\r\n\r\n    handleChange = event =>{\r\n        const{name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        const{displayName, email, password,  confirmPassword} = this.state;\r\n        return(\r\n            <div className='sign-up'>\r\n                <h2 className='title'> I do not have an account </h2>\r\n                <span> Sign up with your email and password</span>\r\n                <form className='sign-up-form' onSubmit= {this.handleSubmit} >\r\n                   <FromInput  \r\n                        type='text'\r\n                        name='displayName'\r\n                        value={displayName}\r\n                        onChange={this.handleChange}\r\n                        label = 'DisplayName'\r\n                        required\r\n                    />\r\n\r\n                    <FromInput  \r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={this.handleChange}\r\n                        label = 'email'\r\n                        required\r\n                    />\r\n\r\n                    <FromInput  \r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={this.handleChange}\r\n                        label = 'password'\r\n                        required\r\n                    />\r\n\r\n                    <FromInput  \r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        onChange={this.handleChange}\r\n                        label = 'Confirm Password'\r\n                        required\r\n                    />\r\n                   <CustomButton type= 'submit'>Sing UP</CustomButton>     \r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps) (SignUp)"]},"metadata":{},"sourceType":"module"}