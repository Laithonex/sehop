{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Laith\\\\Desktop\\\\React\\\\eshop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyD_CbpJgSXMwHzjArKPfePwXZwF61cPGAk\",\n  authDomain: \"eshop-6fa4c.firebaseapp.com\",\n  databaseURL: \"https://eshop-6fa4c.firebaseio.com\",\n  projectId: \"eshop-6fa4c\",\n  storageBucket: \"eshop-6fa4c.appspot.com\",\n  messagingSenderId: \"148758146257\",\n  appId: \"1:148758146257:web:b7aa5d4d733ff164bf69f0\",\n  measurementId: \"G-MLD0RC8LZQ\"\n};\nexport const creatUserProfileDocument = async (userAuth, addtionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapRef = await userRef.get();\n\n  if (!snapRef.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, addtionalData));\n    } catch (error) {\n      console.log('error creating user', error.massage);\n    }\n  } // console.log(snapRef)\n\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","creatUserProfileDocument","userAuth","addtionalData","userRef","firestore","doc","uid","snapRef","get","exists","displayName","email","createdAt","Date","set","error","console","log","massage","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,6BAFD;AAGXC,EAAAA,WAAW,EAAE,oCAHF;AAIXC,EAAAA,SAAS,EAAE,aAJA;AAKXC,EAAAA,aAAa,EAAE,yBALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWE,OAAO,MAAMC,wBAAwB,GAAG,OAAMC,QAAN,EAAgBC,aAAhB,KAAkC;AACxE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,OAAO,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAtB;;AAEA,MAAG,CAACD,OAAO,CAACE,MAAZ,EAAmB;AAAA,UACVC,WADU,GACYT,QADZ,CACVS,WADU;AAAA,UACGC,KADH,GACYV,QADZ,CACGU,KADH;AAEjB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACD,YAAMV,OAAO,CAACW,GAAR;AACNJ,QAAAA,WADM;AAENC,QAAAA,KAFM;AAGNC,QAAAA;AAHM,SAIHV,aAJG,EAAN;AAMD,KAPD,CAOC,OAAOa,KAAP,EAAc;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AAEF,GAtBuE,CAwBxE;;AACD,CAzBM;AA2BP5B,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAET,MAAMiB,QAAQ,GAAE,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAhB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AAEE,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AACP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyD_CbpJgSXMwHzjArKPfePwXZwF61cPGAk\",\r\n    authDomain: \"eshop-6fa4c.firebaseapp.com\",\r\n    databaseURL: \"https://eshop-6fa4c.firebaseio.com\",\r\n    projectId: \"eshop-6fa4c\",\r\n    storageBucket: \"eshop-6fa4c.appspot.com\",\r\n    messagingSenderId: \"148758146257\",\r\n    appId: \"1:148758146257:web:b7aa5d4d733ff164bf69f0\",\r\n    measurementId: \"G-MLD0RC8LZQ\"\r\n  };\r\n\r\n  export const creatUserProfileDocument = async(userAuth, addtionalData) => {\r\n    if (!userAuth) return; \r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n    const snapRef = await userRef.get()\r\n\r\n    if(!snapRef.exists){\r\n      const {displayName, email} = userAuth; \r\n      const createdAt = new Date();\r\n\r\n      try{\r\n        await userRef.set({\r\n        displayName, \r\n        email, \r\n        createdAt,\r\n        ...addtionalData\r\n        })\r\n      }catch (error) {\r\n        console.log('error creating user', error.massage)\r\n      }\r\n\r\n    }\r\n\r\n    // console.log(snapRef)\r\n  }\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\nconst provider =new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt: 'select_account'});\r\n\r\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n  export default firebase;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}