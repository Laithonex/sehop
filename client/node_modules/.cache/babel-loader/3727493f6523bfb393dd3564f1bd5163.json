{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.fetchCollectionsFailure,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = snapshot;\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n}; // export const fetchCollectionsStartAsync = () => {\n//     return dispatch => {\n//       const collectionRef = firestore.collection('collections');\n//       dispatch();\n//       collectionRef\n//         .get()\n//         .then(snapshot => {\n//           const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//           dispatch(collectionsMap);\n//         })\n//         .catch(error => dispatch(error.message));\n//     };\n//   };\n// export const fetchCollectionsStart = () => ({\n//     type: ShopActionTypes.FETCH_COLLECTIONS_START\n//   });\n//   export const fetchCollectionsSuccess = collectionsMap => ({\n//     type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n//     payload: collectionsMap\n//   });\n//   export const fetchCollectionsFailure = errorMessage => ({\n//     type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n//     payload: errorMessage\n//   });\n//   export const fetchCollectionsStartAsync = () => {\n//     return dispatch => {\n//       const collectionRef = firestore.collection('collections');\n//       dispatch(fetchCollectionsStart());\n//       collectionRef\n//         .get()\n//         .then(snapshot => {\n//           const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//           dispatch(fetchCollectionsSuccess(collectionsMap));\n//         })\n//         .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n//     }};","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","fetchCollectionsStart","type","FETCH_COLLECTION_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AAGA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEH,eAAe,CAACI;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,aAAa,KAAK;AACvDH,EAAAA,IAAI,EAAEH,eAAe,CAACO,wBADiC;AAEvDC,EAAAA,OAAO,EAAEF;AAF8C,CAAL,CAA7C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACtDP,EAAAA,IAAI,EAAEH,eAAe,CAACS,uBADgC;AAEtDD,EAAAA,OAAO,EAAEE;AAF6C,CAAL,CAA5C;AAKP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAF,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AAGAW,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMX,aAAa,GAAIW,QAAvB;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACC,aAAD,CAAxB,CAAR;AACH,KAHD,EAGGY,KAHH,CAGSC,KAAK,IAAIP,QAAQ,CAACH,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAID,GAVD;AAWD,CAZM,C,CAiBP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ShopActionTypes from './shop.types'; \r\nimport { firestore } from '../../firebase/firebase.utils'; \r\n\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: ShopActionTypes.FETCH_COLLECTION_START,\r\n}); \r\n\r\nexport const fetchCollectionsSuccess = collectionMap => ({\r\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\r\n  payload: collectionMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n  type: ShopActionTypes.fetchCollectionsFailure,\r\n  payload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return dispatch => {\r\n    const collectionRef = firestore.collection('collections');\r\n\r\n    dispatch(fetchCollectionsStart()); \r\n       \r\n\r\n    collectionRef.get().then(snapshot => {\r\n        const collectionMap = (snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionMap)); \r\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// export const fetchCollectionsStartAsync = () => {\r\n//     return dispatch => {\r\n//       const collectionRef = firestore.collection('collections');\r\n//       dispatch();\r\n  \r\n//       collectionRef\r\n//         .get()\r\n//         .then(snapshot => {\r\n//           const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n//           dispatch(collectionsMap);\r\n//         })\r\n//         .catch(error => dispatch(error.message));\r\n//     };\r\n//   };\r\n\r\n\r\n// export const fetchCollectionsStart = () => ({\r\n//     type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n//   });\r\n\r\n//   export const fetchCollectionsSuccess = collectionsMap => ({\r\n//     type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n//     payload: collectionsMap\r\n//   });\r\n  \r\n//   export const fetchCollectionsFailure = errorMessage => ({\r\n//     type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n//     payload: errorMessage\r\n//   });\r\n  \r\n//   export const fetchCollectionsStartAsync = () => {\r\n//     return dispatch => {\r\n//       const collectionRef = firestore.collection('collections');\r\n//       dispatch(fetchCollectionsStart());\r\n  \r\n//       collectionRef\r\n//         .get()\r\n//         .then(snapshot => {\r\n//           const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n//           dispatch(fetchCollectionsSuccess(collectionsMap));\r\n//         })\r\n//         .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n//     }};"]},"metadata":{},"sourceType":"module"}