{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laith\\\\Desktop\\\\React\\\\eshop\\\\src\\\\Pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux'; // import {firestore, \n//         convertCollectionsSnapshotToMap\n//         } from '../../firebase/firebase.utils'; \n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../Component/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../Component/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  // firebase style    \n  //  componentDidMount(){ \n  //     const {updateCollections} = this.props; \n  //     const collectionRef = firestore.collection('collections');\n  //     collectionRef.onSnapshot(async snapshot => {\n  //         console.log(snapshot)\n  //     });\n  //     this.unsubscribeFromSnapshot = collectionRef.onSnapshot( async snapshot => {\n  //         const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n  //         updateCollections(collectionMap); \n  //         this.setState({loading: false});\n  //     });\n  //  };\n  componentDidMount() {// this the the promise style\n  }\n\n  render() {\n    const match = this.props.match; // const {loading} = this.state; \n\n    return (// Ref. To Shop collection\n      React.createElement(\"div\", {\n        className: \"shop-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n          isLoading: loading\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n          isLoading: loading\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage); //\n// import React from 'react';\n// import { Route } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n// import CollectionsOverviewContainer from '../../Component/collections-overview/collections-overview.component';\n// import CollectionPageContainer from '../shop/collection.container';\n// class ShopPage extends React.Component {\n//   componentDidMount() {\n//     const { fetchCollectionsStartAsync } = this.props;\n//     fetchCollectionsStartAsync();\n//   }\n//   render() {\n//     const { match } = this.props;\n//     return (\n//       <div className='shop-page'>\n//         <Route\n//           exact\n//           path={`${match.path}`}\n//           component={CollectionsOverviewContainer}\n//         />\n//         <Route\n//           path={`${match.path}/:collectionId`}\n//           component={CollectionPageContainer}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// // const mapDispatchToProps = dispatch => ({\n// //     fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n// // });\n// const mapDispatchToProps = dispatch => ({\n//     fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n//   });\n// export default connect(\n//   null,\n//   mapDispatchToProps\n// )(ShopPage);","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/src/Pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","WithSpinner","CollectionsOverview","CollectionPage","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","render","match","props","path","mapDispatchToProps","dispatch","updateCollections","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;AACA;AACA;;AAEA,SAAQC,0BAAR,QAAyC,+BAAzC;AAEA,OAAOC,WAAP,MAAwB,qDAAxB;AAEA,OAAOC,mBAAP,MAAiC,qEAAjC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,6BAA6B,GAAGH,WAAW,CAACC,mBAAD,CAAjD;AACA,MAAMG,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMG,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAF2B;AAAA,SAMnCC,uBANmC,GAMT,IANS;AAAA;;AAQnC;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGAC,EAAAA,iBAAiB,GAAE,CAAE;AAEnB;;AAEFC,EAAAA,MAAM,GAAE;AAAA,UACGC,KADH,GACY,KAAKC,KADjB,CACGD,KADH,EAEJ;;AACA,WAAS;AACL;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEA,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAKD,KAAD,IAAW,oBAAC,6BAAD;AAA+B,UAAA,SAAS,EAAEL;AAA1C,WAAuDK,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEJ,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAKD,KAAD,IAAW,oBAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEL;AAAtC,WAAmDK,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFI;AADJ;AAMH;;AAvCkC;;AA0CvC,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACpCC,EAAAA,iBAAiB,EAAEC,cAAc,IAAIF,QAAQ,CAACC,iBAAiB,CAACC,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAKA,eAAepB,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAmCV,QAAnC,CAAf,C,CAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom'; \r\nimport {createStructuredSelector} from 'reselect';\r\nimport {connect} from 'react-redux';\r\n// import {firestore, \r\n//         convertCollectionsSnapshotToMap\r\n//         } from '../../firebase/firebase.utils'; \r\n\r\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\r\n\r\nimport WithSpinner from '../../Component/with-spinner/with-spinner.component'; \r\n\r\nimport CollectionsOverview  from '../../Component/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component'; \r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview); \r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); \r\n\r\nclass ShopPage extends React.Component {\r\n    \r\n    state = {\r\n        loading: true\r\n    };\r\n\r\n    unsubscribeFromSnapshot = null; \r\n\r\n    // firebase style    \r\n    //  componentDidMount(){ \r\n    //     const {updateCollections} = this.props; \r\n\r\n    //     const collectionRef = firestore.collection('collections');\r\n        \r\n    //     collectionRef.onSnapshot(async snapshot => {\r\n    //         console.log(snapshot)\r\n    //     });\r\n\r\n    //     this.unsubscribeFromSnapshot = collectionRef.onSnapshot( async snapshot => {\r\n    //         const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //         updateCollections(collectionMap); \r\n    //         this.setState({loading: false});\r\n    //     });\r\n    //  };\r\n\r\n\r\n    componentDidMount(){ // this the the promise style\r\n\r\n     }\r\n\r\n    render(){\r\n        const {match} = this.props;\r\n        // const {loading} = this.state; \r\n        return(  // Ref. To Shop collection\r\n            <div className='shop-page'> \r\n            <Route exact path={`${match.path}`} render = {(props) => <CollectionOverviewWithSpinner isLoading={loading} {...props}/>} /> \r\n        <Route path={`${match.path}/:collectionId`} render = {(props) => <CollectionPageWithSpinner isLoading={loading} {...props}/>} /> \r\n            </div>\r\n        );\r\n    }\r\n}  \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n});\r\n    \r\n\r\nexport default connect(null, mapDispatchToProps) (ShopPage);\r\n\r\n//\r\n\r\n// import React from 'react';\r\n// import { Route } from 'react-router-dom';\r\n// import { connect } from 'react-redux';\r\n\r\n// import { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\r\n\r\n// import CollectionsOverviewContainer from '../../Component/collections-overview/collections-overview.component';\r\n// import CollectionPageContainer from '../shop/collection.container';\r\n\r\n// class ShopPage extends React.Component {\r\n//   componentDidMount() {\r\n//     const { fetchCollectionsStartAsync } = this.props;\r\n\r\n//     fetchCollectionsStartAsync();\r\n//   }\r\n\r\n//   render() {\r\n//     const { match } = this.props;\r\n\r\n//     return (\r\n//       <div className='shop-page'>\r\n//         <Route\r\n//           exact\r\n//           path={`${match.path}`}\r\n//           component={CollectionsOverviewContainer}\r\n//         />\r\n//         <Route\r\n//           path={`${match.path}/:collectionId`}\r\n//           component={CollectionPageContainer}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// // const mapDispatchToProps = dispatch => ({\r\n// //     fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n// // });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n//   });\r\n\r\n\r\n// export default connect(\r\n//   null,\r\n//   mapDispatchToProps\r\n// )(ShopPage);"]},"metadata":{},"sourceType":"module"}