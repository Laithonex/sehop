{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Laith\\\\Desktop\\\\React\\\\eshop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Laith\\\\Desktop\\\\React\\\\eshop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Laith\\\\Desktop\\\\React\\\\eshop\\\\client\\\\src\\\\Component\\\\sign-in\\\\sign-in.compoent.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FromInput from '../from-input/from-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"I alreaddy Have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Sign In with you Email and Password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(FromInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(FromInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"sign in\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, '', \"sign with Google \", ''))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/client/src/Component/sign-in/sign-in.compoent.jsx"],"names":["React","useState","connect","FromInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FromInput from '../from-input/from-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n    const [userCredentials, setCredentials ] = useState({ email:'', password: '' })\r\n    const { email, password } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n\r\n        emailSignInStart(email, password);\r\n\r\n\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { value, name } = event.target;\r\n\r\n        setCredentials({...userCredentials, [name]: value });\r\n    };\r\n\r\n    \r\n        return (\r\n            <div className='sign-in'>\r\n                <h2>I alreaddy Have an account</h2>\r\n                <span>Sign In with you Email and Password</span>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <FromInput\r\n                        name='email'\r\n                        type='email'\r\n                        value={email}\r\n                        handleChange={handleChange}\r\n                        label='email'\r\n                        required\r\n                    />\r\n\r\n                    <FromInput\r\n                        name='password'\r\n                        type='password'\r\n                        value={password}\r\n                        handleChange={handleChange}\r\n                        label='password'\r\n                        required\r\n                    />\r\n                    <div className='buttons'>\r\n\r\n\r\n                        <CustomButton type='submit'>\r\n                            sign in\r\n                </CustomButton>\r\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\r\n                            {''}\r\n                            sign with Google {''}\r\n                        </CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}