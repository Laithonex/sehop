{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laith\\\\Desktop\\\\React\\\\eshop\\\\src\\\\Component\\\\sign-in\\\\sign-in.compoent.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FromInput from '../from-input/from-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; // import {auth, signInWithGoogle} from '../../firebase/firebase.utils';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n  constructor(Props) {\n    super(Props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const emailSignInStart = this.props.emailSignInStart;\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      emailSignInStart(email, password); // try {\n      //     await auth.signInWithEmailAndPassword(email, password)\n      //     this.setState({email:'', passowrd:''});\n      // } catch(error){\n      // }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"I alreaddy Have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Sign In with you Email and Password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(FromInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(FromInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"sign in\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, '', \"sign with Google \", ''))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/Laith/Desktop/React/eshop/src/Component/sign-in/sign-in.compoent.jsx"],"names":["React","connect","FromInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","Component","constructor","Props","handleSubmit","event","preventDefault","props","state","email","password","handleChange","target","value","name","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FromInput from '../from-input/from-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n// import {auth, signInWithGoogle} from '../../firebase/firebase.utils';\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(Props) {\r\n        super(Props);\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const { emailSignInStart } = this.props;\r\n        const { email, password } = this.state;\r\n\r\n        emailSignInStart(email, password);\r\n\r\n        // try {\r\n        //     await auth.signInWithEmailAndPassword(email, password)\r\n        //     this.setState({email:'', passowrd:''});\r\n        // } catch(error){\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { value, name } = event.target;\r\n\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    render() {\r\n        const { googleSignInStart } = this.props;\r\n        return (\r\n            <div className='sign-in'>\r\n                <h2>I alreaddy Have an account</h2>\r\n                <span>Sign In with you Email and Password</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FromInput\r\n                        name='email'\r\n                        type='email'\r\n                        value={this.state.email}\r\n                        handleChange={this.handleChange}\r\n                        label='email'\r\n                        required\r\n                    />\r\n\r\n                    <FromInput\r\n                        name='password'\r\n                        type='password'\r\n                        value={this.state.password}\r\n                        handleChange={this.handleChange}\r\n                        label='password'\r\n                        required\r\n                    />\r\n                    <div className='buttons'>\r\n\r\n\r\n                        <CustomButton type='submit'>\r\n                            sign in\r\n                </CustomButton>\r\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\r\n                            {''}\r\n                            sign with Google {''}\r\n                        </CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}